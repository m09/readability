/*! readability 15-05-2014 */
var Mapping=React.createClass({displayName:"Mapping",render:function(){var a=[];return _.each(this.props.data,function(b){a.push(React.DOM.li({role:"presentation",className:"dropdown-header"},b.original.text));var c=_.sortBy(b.revised,function(a){return-a.count});_.each(_.take(c,10),function(b){a.push(React.DOM.li({role:"presentation"},b.text.length>20?React.DOM.span({title:b.text},b.text.substring(0,19)+"â€¦"):b.text,React.DOM.span({className:"badge pull-right"},b.count)))})}),React.DOM.span({className:"dropdown"},React.DOM.span({className:"dropdown-toggle","data-toggle":"dropdown",style:{color:this.props.style,textDecoration:"underline",cursor:"help"}},this.props.text),React.DOM.ul({className:"dropdown-menu",role:"menu"},a))}}),InputPane=React.createClass({displayName:"InputPane",render:function(){return React.DOM.section({className:"tab-pane active",id:"input",contentEditable:"true",style:{minHeight:"200px"}},"this, and that!")}}),OutputPane=React.createClass({displayName:"OutputPane",getInitialState:function(){return{curr:void 0}},handleShowPopover:function(a){void 0!==this.state.curr&&$(this.state.curr).popover("hide"),this.setState({curr:a.target})},handleHidePopover:function(){this.setState({popoverShown:void 0})},componentDidMount:function(){var a=this.getDOMNode();jQuery(a).popover({selector:'[rel="popover"]:visible',html:!0}),jQuery(a).on("show.bs.popover",this.handleShowPopover),jQuery(a).on("hide.bs.popover",this.handleHidePopover)},componentWillUnmount:function(){var a=this.getDOMNode();jQuery(a).off("show.bs.popover"),jQuery(a).off("hide.bs.popover"),jQuery(a).popover("destroy")},byBegins:function(){var a={},b={};return _.each(this.props.data.annotations,function(c){{var d=_.first(c.original.tokens).begin,e=_.last(c.original.tokens).end;c.original.text}void 0===a[d]&&(a[d]=[],_.each(b,function(b,c){c>d&&(a[d]=a[d].concat(b))})),a[d].push(c),b[e]=b[e]||[],b[e].push(c)}),a},byBeginsAndEnds:function(a){var b=[],c=_.sortBy(_.pairs(a),function(a){return Number(a[0])});return _.each(c,function(a){a[1].sort(function(a,b){return _.last(a.original.tokens).end-_.last(b.original.tokens).end})}),_.each(c,function(a,d){var e=+a[0],f=e,g=a[1],h=void 0;void 0!==c[d+1]&&(h=c[d+1][0]);for(var i=0;i<g.length;i++){var j=g[i],k=_.last(j.original.tokens).end;if(f==k)break;if(b.push([f,Math.min(k,h||k),g.slice(i)]),void 0!==h&&f>h)break;f=k}}),b},toHtml:function(a){var b=this.props.data.text,c=0,d=!0,e=[];return _.each(a,function(a){var f=a[0],g=a[1],h=a[2];c!==f&&e.push(b.substring(c,f)),e.push(Mapping({style:d?"red":"blue",data:h,text:b.substring(f,g),ref:f})),c=g,d=!d}),e.push(b.substring(c,b.length)),e},render:function(){return React.DOM.section({id:this.props.id,className:"tab-pane"},this.toHtml(this.byBeginsAndEnds(this.byBegins())))}}),Annotator=React.createClass({displayName:"Annotator",getInitialState:function(){return{data:{normal:{text:"",tokens:[],annotations:[]},filtered:{text:"",tokens:[],annotations:[]}},dict:jQuery("input:radio[name='dict']:checked").val(),lastText:"",fetched:{normal:!0,filtered:!0}}},fetchAnnotations:function(a){var b=jQuery(this.refs.input.getDOMNode()).text();if(b===this.state.lastText){if(this.state.fetched[a])return}else this.setState({fetched:{normal:!1,filtered:!1}});this.setState({lastText:b}),jQuery.ajax({type:"POST",url:this.props.url,contentType:"application/json; charset=UTF-8",data:JSON.stringify({data:b,dict:a})}).done(function(b){var c=jQuery.extend({},this.state.data);c[a]=b;var d=jQuery.extend({},this.state.fetched);d[a]=!0,this.setState({data:c,fetched:d})}.bind(this))},toNormal:function(){this.fetchAnnotations("normal")},toFiltered:function(){this.fetchAnnotations("filtered")},render:function(){return React.DOM.section({className:"container",style:{minHeight:"300px"}},React.DOM.ul({className:"nav nav-tabs nav-justified"},React.DOM.li({className:"active"},React.DOM.a({href:"#input","data-toggle":"tab"},"Your text")),React.DOM.li(null,React.DOM.a({href:"#normal",onClick:this.toNormal,"data-toggle":"tab"},"Full resource analysis")),React.DOM.li(null,React.DOM.a({href:"#filtered",onClick:this.toFiltered,"data-toggle":"tab"},"Filtered resource analysis"))),React.DOM.section({className:"tab-content"},InputPane({ref:"input"}),OutputPane({id:"normal",data:this.state.data.normal}),OutputPane({id:"filtered",data:this.state.data.filtered})))}});React.renderComponent(Annotator({url:"http://localhost:9000/"}),document.getElementById("annotator"));